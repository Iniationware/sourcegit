name: Package
on:
  workflow_call:
    inputs:
      version:
        description: SourceGit package version
        required: true
        type: string
jobs:
  windows:
    name: Package Windows
    runs-on: windows-2022
    strategy:
      matrix:
        runtime: [win-x64, win-arm64]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: sourcegit.${{ matrix.runtime }}
          path: build/SourceGit
      - name: Package
        shell: pwsh
        env:
          VERSION: ${{ inputs.version }}
          RUNTIME: ${{ matrix.runtime }}
        run: ./build/scripts/package.win.ps1
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: package.${{ matrix.runtime }}
          path: build/sourcegit_*.zip
      - name: Delete temp artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: sourcegit.${{ matrix.runtime }}
  osx-app:
    name: Package macOS
    runs-on: macos-latest
    strategy:
      matrix:
        runtime: [osx-x64, osx-arm64]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: sourcegit.${{ matrix.runtime }}
          path: build
      - name: Package
        env:
          VERSION: ${{ inputs.version }}
          RUNTIME: ${{ matrix.runtime }}
        run: |
          mkdir build/SourceGit
          tar -xzf "build/sourcegit.${{ matrix.runtime }}.tar.gz" -C build/SourceGit
          ./build/scripts/package.osx-app.sh
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: package.${{ matrix.runtime }}
          path: build/sourcegit_*.zip
      - name: Delete temp artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: sourcegit.${{ matrix.runtime }}
  linux:
    name: Package Linux
    runs-on: ubuntu-latest
    # NO CONTAINER - Run directly on Ubuntu like build.yml
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install package dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev fakeroot rpm desktop-file-utils libfuse2 file
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: sourcegit.${{ matrix.runtime }}
          path: build
      - name: Package
        env:
          VERSION: ${{ inputs.version }}
          RUNTIME: ${{ matrix.runtime }}
          APPIMAGE_EXTRACT_AND_RUN: 1
        run: |
          mkdir build/SourceGit
          tar -xzf "build/sourcegit.${{ matrix.runtime }}.tar.gz" -C build/SourceGit
          ./build/scripts/package.linux.sh
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package.${{ matrix.runtime }}
          path: |
            build/sourcegit-*.AppImage
            build/sourcegit_*.deb
            build/sourcegit-*.rpm
      - name: Delete temp artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: sourcegit.${{ matrix.runtime }}