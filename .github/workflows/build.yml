name: Build
on:
  workflow_call:
jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Windows x64
            os: windows-2022
            runtime: win-x64
          - name: Windows ARM64
            os: windows-2022
            runtime: win-arm64
          - name: macOS (Intel)
            os: macos-13
            runtime: osx-x64
          - name: macOS (Apple Silicon)
            os: macos-latest
            runtime: osx-arm64
          - name: Linux
            os: ubuntu-latest
            runtime: linux-x64
          - name: Linux (arm64)
            os: ubuntu-latest
            runtime: linux-arm64
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      # For Linux builds, we don't use containers anymore - simpler and more reliable
      - name: Setup Linux environment
        if: startsWith(matrix.runtime, 'linux-')
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget git unzip zip tzdata clang

      - name: Configure arm64 cross-compilation
        if: matrix.runtime == 'linux-arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64-cross-compile.list << EOF
          deb [arch=arm64] http://ports.ubuntu.com/ $(lsb_release -cs) main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ $(lsb_release -cs)-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ $(lsb_release -cs)-security main restricted universe multiverse
          EOF'
          sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
          sudo sed -i 's/deb mirror/deb [arch=amd64,i386] mirror/' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build
        run: dotnet build -c Release

      - name: Publish
        run: dotnet publish src/SourceGit.csproj -c Release -o publish -r ${{ matrix.runtime }} --self-contained

      - name: Rename Linux executable
        if: startsWith(matrix.runtime, 'linux-')
        run: mv publish/SourceGit publish/sourcegit

      - name: Create tar archive
        if: startsWith(matrix.runtime, 'linux-') || startsWith(matrix.runtime, 'osx-')
        run: |
          tar -czf "sourcegit.${{ matrix.runtime }}.tar.gz" -C publish .
          rm -r publish/*
          mv "sourcegit.${{ matrix.runtime }}.tar.gz" publish/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sourcegit.${{ matrix.runtime }}
          path: publish/*